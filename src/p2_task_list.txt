/************************************************************
  p2 Task List (must be completed and submitted for Team Building 102)
  
  Team Number: 41   Team Name: IDGAF

+ Task 0: Each team member must carefully read the assignment and put
  some notes together regarding how they might approach the work 
  required for this programming assignment.  Plan to meet in person
  to discuss how you can best complete this assignment.  Do you want 
  to work in smaller groups on specific tasks?
     
+ Task 1: Assign Code Letters for each Team Member
 
  Complete this table:
  Code letter = Student name
  ---------------------------
         T    =  Tanner Wolf
         I    =  Isaac Heinrich
         W    =  Will Mustari
         J    =  Jiayue Lai
         B    =  Jarrett Benson
         C    =  Cameron Carlson
              
+T Task 2: Define the JobList class so that it implements the ListADT
  as described in p0.  List sub-tasks here.
  
    + Create an Eclipse project for p2
    + Download provided files, need these for sure:
      + ListADT interface
      + Listnode class
      + Job class
    + Add p2 files to your p2 project
    + Make sure that all classes and interfaces are in the default package
    + Create a new class named JobList and add stub methods for
      all required methods of the ListADT
    + Add declaration to "implements ListADT<Job>" to this class
    + implement each method
       + add(item)
       + add(pos,item)
       + remove(pos)
       
+ Task 3: Write a Test_JobList class 
  This can be written before Task 2 is finished.
  Just write test methods that will pass when JobList is finished
  + add a main method
  + add a test to create a JobList
  + test add(item) method
  + test add(pos,item) method
  + test ...
  + test ...
  + test ...
  
+I/W Task 4: Write a JobListIterator class
  Make sure that it is implemented as described in the assignment.
  + add a constructor 
  + hasNext()
  + next()
  
+ Task 5: Add a test to your Test_JobList class to test that the 
  JobList can return an iterator and that the JobListIterator
  works as expected.
  
+W Task 6: Write the Scoreboard class so that it implements all
  required operations of the ScoreboardADT. Review the Game class
  to see how the Scoreboard class is being used.
  
+T Task 7: Complete the Game class implementation by completing the
  TODO tags.
  
+ Task 8: Re-read the assignment and map out the actions that must
  happen in the GameApp (main) class.  There is much to do here and
  it may be much more convenient to write methods and call them 
  from the main method.
  
+Y Task 9: Implement the GameApp class incrementally.  
  Compile and run after each of these items
  +T main: get the command line arguments (use the getIntegerInput method)
  +T Add the Welcome message as output
  +T main: construct a Game instance with the command line values
    +T Try calling Game methods to see if Game was constructed
      and initialized correctly.
      
+T/Y Task 10: Define a main_menu_loop() method: 
  Put code for one iteration of game play
  + Get the outputs to display in the right order
  +T Add a call to this method from the main method
  + Get input value and echo to screen
  + output the job list
  
+W Task 11:
  +W finish comments
  +W comment headers
  +W finish this file

    
*****************************************************************/
